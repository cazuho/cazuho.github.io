---
import BaseLayout from "./BaseLayout.astro";

const { frontmatter } = Astro.props;

const allPosts = await Astro.glob("../pages/posts/*.md");
// すべての記事の合計数
const numberOfPosts = allPosts.length;

// 日付新しい順
const sortedPosts = allPosts.sort((a, b) => {
    const aDate = new Date(a.frontmatter.pubDate);
    const bDate = new Date(b.frontmatter.pubDate);
    return bDate.getTime() - aDate.getTime();
});

const postTime = new Date(frontmatter.pubDate).getTime();
const postIndex = sortedPosts.findIndex(x => new Date(x.frontmatter.pubDate).getTime() === postTime); 

// 前の記事 
// 現在の投稿が最古の記事かどうかで分岐
const prevPost = postIndex + 1 === numberOfPosts ? null : sortedPosts[postIndex + 1];
// 次の記事
// 現在の投稿が最新の記事がどうかで分岐
const nextPost = postIndex === 0 ? null : sortedPosts[postIndex - 1];
---

<BaseLayout pageTitle={frontmatter.title}>
    <p>{frontmatter.pubDate.slice(0, 10)}</p>
    <h2>{frontmatter.title}</h2>
    <p>{frontmatter.description}</p>

    <div class="tags">
        {frontmatter.tags.map((tag) => (
            <p class="tag"><a href={`/tags/${tag}`}><i class="fa-solid fa-tags"></i>{tag}</a></p>
        ))}
    </div>

    <slot />

    <nav class="page-nav">
        <ul class="page-nav-list">
            <li class="page-nav-item">
                <!-- 前の記事（ある場合にのみ表示）-->
                {prevPost && <a href={`${prevPost.url}`}><div class="page-nav-item-body"><span>PREV</span><span>{prevPost.frontmatter.title}</span></div></a>}
            </li>
            <li class="page-nav-item">
                <!-- 次の記事（ある場合にのみ表示）-->
                {nextPost && <a href={`${nextPost.url}`}><div class="page-nav-item-body"><span>NEXT</span><span>{nextPost.frontmatter.title}</span></div></a>}
            </li>
        </ul>
    </nav>
</BaseLayout>

<style>
    .page-nav-list {
        margin: 0;
        list-style-type: none;
        border-width: 0px;
        border-top-width: 1px;
        border-style: solid;
        padding: 0;
        padding-top: 1.5rem;
        display: grid;
        grid-template-columns: repeat(auto-fit,minmax(min(18rem,100%),1fr));
        gap: 1rem;
    }

    .page-nav-item {
        display: grid;
        gap: 0.25rem;    
    }

    .page-nav-item:nth-child(2) {
        flex-direction: row-reverse;
        text-align: right;
    }

    .page-nav-item-body {
        display: grid;
        gap: 0.25rem;
    }
</style>